/**
 * @brief Library reactors for the IMU on the the <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * @author Abhi Gundrala
 * @author Edward A. Lee
 */
target C {
    platform: "RP2040", 
    threading: false,
    files: ["../../lib/"],                            // Needed to find imu.h
    cmake-include: ["../../platform/robot_lib.txt"],  // Needed to find imu.h
}

preamble {=
    #include <pico/stdlib.h>
    #include <imu.h>

    // static global imu instance struct
    static imu_inst_t imu_inst;
=}

// trapazoidal integration
reactor GyroTrap(period:time(100 msec)) {
    timer t1(period, period);
    
    output x:float;
    output y:float;
    output z:float;
    // x,y,z
    reset state prev_deg_x:float(0);
    reset state prev_deg_y:float(0);
    reset state prev_deg_z:float(0);
    reset state prev_vel_x:float(0);
    reset state prev_vel_y:float(0);
    reset state prev_vel_z:float(0);

    reaction(startup) {=
        imu_init(&imu_inst);
    =}

    reaction(reset) {=
        // reset
        self->prev_deg_x = 0.0;
        self->prev_deg_y = 0.0;
        self->prev_deg_z = 0.0;
        self->prev_vel_x = 0.0;
        self->prev_vel_y = 0.0;
        self->prev_vel_z = 0.0;
    =}

    // integrate gyro 
    reaction(t1) -> x, y, z {=
        axes_data_t gyro_data;
        imu_read_gyro(&imu_inst, &gyro_data);

        self->prev_deg_x += (gyro_data.x + self->prev_vel_x) * (self->period * 1e-9) / 2;
        self->prev_deg_y += (gyro_data.y + self->prev_vel_y) * (self->period * 1e-9) / 2;
        self->prev_deg_z += (gyro_data.z + self->prev_vel_z) * (self->period * 1e-9) / 2;
        
        self->prev_vel_x = gyro_data.x;
        self->prev_vel_y = gyro_data.y;
        self->prev_vel_z = gyro_data.z;
        
        // set to integrated value 
        lf_set(x, self->prev_deg_x);
        lf_set(y, self->prev_deg_y);
        lf_set(z, self->prev_deg_z);
    =} 
}

/**
 * When triggered by a true-valued input, sample the accelerometer
 * on the <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * The accelerometer is provided by an
 * <a href="https://www.pololu.com/file/0J1899/lsm6dso.pdf">ST LMS6DSO inertial measurement unit</a>.
 * The outputs give acceleration in <i>g</i>'s with a range of -2 to +2 <i>g</i>
 * and a sensitivity of approximately 0.061 <i>mg</i>'s.
 */
reactor Accelerometer {
    input trigger:bool;
    
    output x:float;
    output y:float;
    output z:float;

    reaction(startup) {=
        imu_init(&imu_inst);
    =}
    
    reaction(trigger) -> x, y, z {= 
        axes_data_t acc_data;
        imu_read_acc(&imu_inst, &acc_data);

        lf_set(x, acc_data.x);
        lf_set(y, acc_data.y);
        lf_set(z, acc_data.z);   
    =}
}
